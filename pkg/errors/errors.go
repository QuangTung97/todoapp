// Code generated by bin/errors. DO NOT EDIT.
package errors

import (
	liberrors "todoapp/lib/errors"
)

// ErrGeneralInternalErrorAccessingDatabase ...
type ErrGeneralInternalErrorAccessingDatabase liberrors.Error

// NewErrGeneralInternalErrorAccessingDatabase ...
func NewErrGeneralInternalErrorAccessingDatabase() *ErrGeneralInternalErrorAccessingDatabase {
	return &ErrGeneralInternalErrorAccessingDatabase{
		RPCStatus: 13,
		Code:      "1301",
		Message:   "Error accessing database",
	}
}

// Err ...
func (e *ErrGeneralInternalErrorAccessingDatabase) Err() error {
	return (*liberrors.Error)(e)
}

// ErrGeneralUnknown ...
type ErrGeneralUnknown liberrors.Error

// NewErrGeneralUnknown ...
func NewErrGeneralUnknown() *ErrGeneralUnknown {
	return &ErrGeneralUnknown{
		RPCStatus: 2,
		Code:      "02",
		Message:   "Unknown",
	}
}

// Err ...
func (e *ErrGeneralUnknown) Err() error {
	return (*liberrors.Error)(e)
}

// GeneralTag ...
type GeneralTag struct {
	InternalErrorAccessingDatabase *ErrGeneralInternalErrorAccessingDatabase
	Unknown                        *ErrGeneralUnknown
}

// General ...
var General = &GeneralTag{
	InternalErrorAccessingDatabase: NewErrGeneralInternalErrorAccessingDatabase(),
	Unknown:                        NewErrGeneralUnknown(),
}

// ErrTodoNotFoundTodo ...
type ErrTodoNotFoundTodo liberrors.Error

// NewErrTodoNotFoundTodo ...
func NewErrTodoNotFoundTodo() *ErrTodoNotFoundTodo {
	return &ErrTodoNotFoundTodo{
		RPCStatus: 5,
		Code:      "0501",
		Message:   "Not found todo",
	}
}

// Err ...
func (e *ErrTodoNotFoundTodo) Err() error {
	return (*liberrors.Error)(e)
}

// TodoTag ...
type TodoTag struct {
	NotFoundTodo *ErrTodoNotFoundTodo
}

// Todo ...
var Todo = &TodoTag{
	NotFoundTodo: NewErrTodoNotFoundTodo(),
}
